import { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { hasLocale, NextIntlClientProvider } from "next-intl";
import { routing } from "@/i18n/routing";
import { notFound } from "next/navigation";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
  params, //============== Access params for the locale
}: Readonly<{
  children: React.ReactNode;
  params: { locale: string }; //============== Ensure locale is available in params
}>) {
  const { locale } = params;

  //============== Check if the locale exists in the routing locales
  if (!hasLocale(routing.locales, locale)) {
    notFound();
  }

  return (
    <html lang={locale || "en"} suppressHydrationWarning>
      {/* Ensure locale is applied to html tag */}
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <NextIntlClientProvider locale={locale}>
          {children}
        </NextIntlClientProvider>{" "}
        {/* Pass locale to the provider */}
      </body>
    </html>
  );
}
